{"version":3,"sources":["ui/Friends/Friends.module.css","ui/Header/Header.module.css","ui/Profile/MyPosts/MyPosts.module.css","ui/StyledComponents/HeaderButton.tsx","api/axios-instance.tsx","redux/loginReducer.ts","ui/Header/Header.tsx","ui/Profile/MyAlbum/MyAlbum.tsx","ui/Profile/ProfileFriends/ProfileFriends.tsx","ui/Profile/MyPosts/Post/Post.tsx","ui/Profile/MyPosts/MyPosts.tsx","redux/profilePageReducer.ts","ui/Profile/MyPosts/MyPostsContainer.tsx","ui/Profile/ProfileInfo/UploadAvatarForm.tsx","ui/Profile/ProfileInfo/ProfileInfo.tsx","redux/peopleReducer.ts","redux/friendsPageReducer.ts","ui/Profile/ProfileInfo/ProfileInfoContainer.tsx","ui/Profile/Profile.tsx","ui/Dialogs/Message/Message.jsx","ui/Dialogs/DialogItem/DialogItem.jsx","redux/messagePageReducer.ts","ui/Dialogs/Dialogs.tsx","ui/Login/Login.tsx","ui/OnePerson/OnePerson.tsx","ui/People/Pagination.tsx","ui/People/People.tsx","ui/People/PeopleContainer.tsx","ui/Friends/Friends.tsx","ui/Friends/FriendsContainer.tsx","App.tsx","serviceWorker.ts","redux/store.js","index.tsx","ui/Dialogs/Dialogs.module.css","ui/Profile/MyPosts/Post/Post.module.css","ui/People/People.module.css","ui/Profile/ProfileFriends/ProfileFriends.module.css","ui/OnePerson/OnePerson.module.css","ui/Login/Login.module.css","ui/Profile/MyAlbum/MyAlbum.module.css","ui/Profile/ProfileInfo/ProfileInfo.module.css","ui/Profile/Profile.module.css","ui/Dialogs/DialogItem/DialogItem.module.css"],"names":["module","exports","friends","header","oneHeaderButton","allHeaderButton","myPosts","imgAddPost","posts","addPost","headlineAddPost","nikNameAddPost","inputArea","HeaderButton","styled","div","_templateObject","axiosInstance","axios","create","baseURL","withCredentials","headers","API-KEY","API","userId","get","login","password","rememberMe","post","email","pageNumber","concat","delete","number","message","body","put","file","formData","FormData","append","Content-Type","newInfo","initialState","status","isAuth","userInfo","userName","statuses","setStatus","type","setIsAuth","setUserInfo","id","me","dispatch","then","res","data","resultCode","loginReducer","state","arguments","length","undefined","action","Object","objectSpread","connect","myId","logOut","getState","props","useEffect","react_default","a","createElement","className","style","StyledComponents_HeaderButton","react_router_dom","to","src","alt","onClick","MyAlbum","myAlbum","headline","photos","myFriends","slice","map","f","oneFriend","key","large","name","profileFriends","allFriend","pending","Post","myPostsApp","headlinePost","imgPost","foto","nikNamePost","contentPost","MyPosts","postsElement","p","MyPosts_Post_Post","textareaWithPhotosBlock","value","newText","onChange","e","newValue","target","updatePostText","postText","likesCount","profileInfo","fullName","newValueAboutMe","newValueLookingForAJobDescription","small","contacts","vk","setProfileInfo","profilePageReducer","newComment","toConsumableArray","defineProperty","contactKey","aboutMe","MyPostsContainer","Profile_MyPosts_MyPosts","this","React","Component","profilePage","UploadAvatarForm","inputEl","useRef","onSubmit","preventDefault","files","fetchSetNewPhotoOfAvatar","ref","button","setEditAvatarMode","ProfileInfo","_useState","useState","_useState2","slicedToArray","followed","setFollow","_useState3","_useState4","editMode","setEditMode","_useState5","_useState6","editAvatarMode","buttonWithAvatar","avatar","buttonForUser","Fragment","ProfileInfo_UploadAvatarForm","putNewInfo","unSubscribe","subscribe","myContactsAndAboutMe","myContacts","spanMyContacts","keys","oneContactKey","oneContactKeySpan","onContactChange","aboutMeChange","users","totalCount","getPeopleThunk","items","subscribeThunk","unsubscribeThunk","unsubscribe","peopleReducer","u","allUsers","getFriendsThunk","_ref","asyncToGenerator","regenerator_default","mark","_callee","countRequest","i","_res","wrap","_context","prev","next","sent","Math","ceil","Promise","resolve","reject","setTimeout","stop","_x","_x2","apply","friendsReducer","filter","ProfileInfoContainer","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","userIdFromUrl","match","params","getProfileInfo","getPeople","getFriends","prevProps","Profile_ProfileInfo_ProfileInfo","withRouter","profile","nikName","react_router","ProfileInfo_ProfileInfoContainer","Profile_MyAlbum_MyAlbum","MyPosts_MyPostsContainer","Profile_ProfileFriends_ProfileFriends","Message","s","dialog","senderName","DialogItem","exact","activeClassName","active","dialogs","messages","currentDialogId","setMessagesAC","setDialodgsAC","setCurrentDialogIdAC","addMessageAC","messagePageReducer","messagePage","setDialogs","setCurrentDialogId","setMessages","addMessage","sendMessageThunk","response","getDialogsAndMessageThunk","dialogsElements","oneDialog","Dialogs_DialogItem_DialogItem","messageElements","m","Dialogs_Message_Message","dialogsItems","messageArea","textAndButton","textarea","currentTarget","LoginReduxForm","reduxForm","form","loginBox","handleSubmit","form_row","Field","component","placeholder","alert","loginTC","OnePerson","user","oneUser","imgDiv","buttonFollow","data-user-id","dataset","ButtonForPagination","Pagination_templateObject","selected","Pagination","pagesCount","buttons","_loop","push","setNewPageNumber","allButtons","People","people","divContainer","ui_OnePerson_OnePerson","pagination","People_Pagination","ui_People_People","assign","Friends","friend","unsubscribeFriend","lenght","ui_Friends_Friends","App","ui_Header_Header","path","render","ui_Dialogs_Dialogs","ui_Profile_Profile","People_PeopleContainer","ui_Login_Login","Friends_FriendsContainer","Boolean","window","location","hostname","combinedReducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunk","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","spanUsersName","footer","oneButton"],"mappings":"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","file":"static/js/main.8c72a658.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__2u7Ry\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__31HxQ\",\"oneHeaderButton\":\"Header_oneHeaderButton__zLsQ1\",\"allHeaderButton\":\"Header_allHeaderButton__1Li8L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__2PcZL\",\"imgAddPost\":\"MyPosts_imgAddPost__1CRsD\",\"posts\":\"MyPosts_posts__3ugQg\",\"addPost\":\"MyPosts_addPost__2jsNQ\",\"headlineAddPost\":\"MyPosts_headlineAddPost__2WCZ2\",\"nikNameAddPost\":\"MyPosts_nikNameAddPost__3WTZZ\",\"inputArea\":\"MyPosts_inputArea__3fAEV\"};","\r\nimport styled from 'styled-components'\r\n\r\n\r\n\r\nlet HeaderButton = styled.div`\r\n\r\n\r\nheight:48px;\r\nbackground-color:#7280CD; \r\nborder-radius:3px;\r\ntext-align: center;\r\nfont-size:20px;\r\n&.active {\r\n    background: red;\r\n  }\r\n\r\n  \r\n\r\n`\r\n\r\nexport default HeaderButton;","import axios from \"axios\";\r\n\r\nexport const axiosInstance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers:{\r\n        'API-KEY': 'edcb0db2-390b-43d1-96c2-48a4199e92c2'\r\n    }\r\n});\r\n\r\nexport const API = {\r\n\tgetProfile (userId: number) {\r\n\t\treturn (\r\n\t\t\taxiosInstance.get(`profile/` + userId)\r\n\t\t)\r\n    },\r\n    login (login: string, password: string, rememberMe: boolean) {\r\n        return (\r\n            axiosInstance.post('auth/login', {\r\n                email: login,\r\n                password: password,\r\n                rememberMe: rememberMe,\r\n             })\r\n        )\r\n    },\r\n    logOut () {\r\n        return(\r\n            axiosInstance.post('auth/logout')\r\n        )\r\n    },\r\n    getPeople(pageNumber: number) {\r\n        return(\r\n        axiosInstance.get(`users?count=24&page=${pageNumber}`)\r\n        )\r\n    },\r\n    subscribe(userId: number){\r\n        return(\r\n            axiosInstance.post('follow/' + userId)\r\n        )\r\n    },\r\n    unSubscribe(userId: number){\r\n        return(\r\n            axiosInstance.delete('follow/' + userId)\r\n        )\r\n    },\r\n    getBundleOfUsers(number: number){\r\n        return(\r\n            axiosInstance.get(`users?count=100&page=${number}`)\r\n        )\r\n    },\r\n    sendMessage(userId: number, message: string){\r\n        return(\r\n            axiosInstance.post(`dialogs/${userId}/messages`, { body: message})\r\n        )\r\n    },\r\n    getMessage(userId: number){\r\n        return(\r\n            axiosInstance.get(`dialogs/${userId}/messages`)\r\n        )\r\n    },\r\n    updateDialogs(userId: number){\r\n        return(\r\n            axiosInstance.put(`dialogs/${userId}`)\r\n        )\r\n    },\r\n    getDialogs(){\r\n        return(\r\n            axiosInstance.get('dialogs')\r\n        )\r\n    },\r\n    setNewPhotoOfAvatar(file: any){\r\n        let formData = new FormData();\r\n        formData.append(\"image\", file);\r\n        return axiosInstance.post('profile/photo',formData,{\r\n            headers:{\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    putNewInfo(newInfo: object){\r\n        return(\r\n            axiosInstance.put('profile',newInfo)\r\n        )\r\n    },\r\n    getAuth(){\r\n        return(\r\n            axiosInstance.get('auth/me')\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { API } from \"../api/axios-instance\";\r\n\r\nconst SET_STATUS = 'LR/SET_STATUS';\r\nconst SET_IS_AUTH = 'LR/SET_IS_AUTH';\r\nconst SET_USER_INFO = 'LRSET_USER_INFO';\r\n\r\n\r\nconst initialState = {\r\n    status: 'INIT',\r\n    isAuth: false,\r\n    userInfo : {\r\n        userId: null,\r\n        userName: '',\r\n    }\r\n}\r\n\r\nexport const statuses = {\r\n    INIT: 'INIT',\r\n    ERROR: 'ERROR',\r\n    INPROGRESS: 'INPROGRESS',\r\n    SUCCESS: 'SUCCESS',\r\n}\r\n\r\nexport const setStatus = (status: string) => ({ type: SET_STATUS, status: status })\r\nexport const setIsAuth = (status: boolean) => ({ type: SET_IS_AUTH,status: status})\r\nexport const setUserInfo = (id: any, login: string) => ({\r\n\r\n        type: SET_USER_INFO,\r\n        id: id,\r\n        login: login,\r\n\r\n})\r\n\r\nconst loginReducer = (state = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_STATUS: {\r\n            return { ...state, status: action.status }\r\n        }\r\n        case SET_IS_AUTH: {\r\n            return { ...state, isAuth: action.status }\r\n        }\r\n        case SET_USER_INFO: {\r\n            return {  ...state,  userInfo: { ...state.userInfo,  userId: action.id,  userName: action.login } }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const loginTC = (login: string, password: string, rememberMe: boolean) => (dispatch: Function) => {\r\n\r\n    dispatch(setStatus(statuses.INPROGRESS));\r\n    API.login(login, password, rememberMe)\r\n        .then((res) => {\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(setStatus(statuses.SUCCESS));\r\n                dispatch(setUserInfo(res.data.data.userId, res.data.data.login));\r\n                dispatch(setIsAuth(true))\r\n            } else {\r\n                dispatch(setStatus(statuses.ERROR));\r\n                alert(res.data.messages[0]);\r\n            }\r\n        })\r\n\r\n}\r\n\r\nexport const logOut = () => (dispatch: Function,getState: any) => {\r\n    let state = getState();\r\n    API.logOut()\r\n        .then((res) => {\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(setUserInfo(null, ''))\r\n                dispatch(setIsAuth(false))\r\n            }\r\n        })\r\n}\r\n\r\nexport const me = () => (dispatch: Function) => {\r\n    API.getAuth()\r\n        .then((res: any) => {\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(setIsAuth(true));\r\n                dispatch(setUserInfo(res.data.data.id, res.data.data.login))\r\n            }\r\n        })\r\n}\r\n\r\n\r\n\r\nexport default loginReducer;","import React, { useEffect } from 'react';\r\nimport style from './Header.module.css'\r\nimport HeaderButton from '../StyledComponents/HeaderButton';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { logOut, me } from '../../redux/loginReducer';\r\n\r\n\r\ninterface IProps {\r\n    isAuth: Boolean;\r\n    myId?: number;\r\n    logOut: any;\r\n    me: Function;\r\n}\r\n\r\nconst Header = (props: IProps) => {\r\n\r\n    useEffect(()=>{\r\n        props.me()\r\n    })\r\n\r\n    return <div className={style.header}>\r\n<div className={style.allHeaderButton}>\r\n\r\n{ !props.isAuth &&  <div className={style.oneHeaderButton}><HeaderButton>\r\n    <NavLink to='/profile'> \r\n    <img src=\"https://img.icons8.com/dusk/64/000000/contract-job.png\" alt=\"profile\">\r\n        </img>Profile</NavLink></HeaderButton></div> }\r\n\r\n     { props.isAuth && <div className={style.oneHeaderButton}><HeaderButton>\r\n         <NavLink to={`/profile/${props.myId}`}>\r\n         <img src=\"https://img.icons8.com/dusk/64/000000/contract-job.png\" alt=\"profile\"></img>Profile</NavLink></HeaderButton></div>}\r\n\r\n      <div className={style.oneHeaderButton}><HeaderButton>\r\n          <NavLink to='/friends'>\r\n          <img src=\"https://img.icons8.com/dusk/64/000000/friends.png\" alt=\"friends\"></img>Friends</NavLink></HeaderButton></div> \r\n\r\n      <div className={style.oneHeaderButton}><HeaderButton>\r\n          <NavLink to='/dialogs'>\r\n          <img src=\"https://img.icons8.com/dusk/64/000000/new-message.png\" alt=\"dialogs\"></img>Dialogs</NavLink></HeaderButton></div> \r\n\r\n      <div className={style.oneHeaderButton}><HeaderButton>\r\n          <NavLink to='/people'>\r\n          <img src=\"https://img.icons8.com/dusk/64/000000/conference-call.png\" alt=\"people\"></img>People</NavLink></HeaderButton></div> \r\n\r\n    { props.isAuth == false ? <div className={style.oneHeaderButton}><HeaderButton>\r\n        <NavLink to='/login'><img src=\"https://img.icons8.com/dusk/64/000000/login-rounded-right.png\" alt=\"login\"></img>\r\n        Login</NavLink></HeaderButton></div> :\r\n\r\n    <div className={style.oneHeaderButton}><HeaderButton onClick={props.logOut}>\r\n        <NavLink to='/login'>\r\n        <img src=\"https://img.icons8.com/cute-clipart/64/000000/exit.png\" alt=\"logout\"></img>Logout</NavLink></HeaderButton></div>  }\r\n      </div>\r\n        </div>\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: any) =>{\r\n    return{\r\n        isAuth: state.login.isAuth,\r\n        myId:state.login.userInfo.userId\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Function) =>{\r\n    return{\r\n        logOut:()=>dispatch(logOut()),\r\n        me:()=>dispatch(me()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React from 'react';\r\nimport style from './MyAlbum.module.css'\r\n\r\n\r\nconst MyAlbum = (props: any) =>{\r\n    return <div className={style.myAlbum}>\r\n        <div className={style.headline}>My album</div>\r\n        <div className={style.photos}>\r\n            <img src='https://pp.userapi.com/c625322/v625322253/4880c/Rje7PYRyPL0.jpg'></img>\r\n            <img src='https://pp.userapi.com/c849328/v849328914/12fcbd/Jz1l1YnQmy8.jpg'></img>\r\n            <img src='https://pp.userapi.com/c849124/v849124094/21175/QpU4byFysP4.jpg'></img>\r\n            <img src='https://pp.userapi.com/c629307/v629307330/38333/wfffSYowsYM.jpg'></img>\r\n            <img src='https://pp.userapi.com/c543109/v543109717/1fdd3/jfmA65f2PZA.jpg'></img>\r\n            <img src='https://pp.userapi.com/c604628/v604628784/2fc6d/K47mv6IHsNA.jpg'></img>\r\n\r\n        </div>\r\n        </div>\r\n}\r\n\r\nexport default MyAlbum","import React from 'react';\r\nimport style from './ProfileFriends.module.css'\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ninterface IProps {\r\n    friends: any;\r\n    status: string;\r\n}\r\n\r\nconst ProfileFriends = (props: IProps) => {\r\n\r\n    var size = 6;\r\n\r\n    var friends = props.friends.slice(0, size).map((f: any) => \r\n        \r\n                <div className={style.oneFriend} key={f.id}>\r\n                    <span>{<NavLink to={`/profile/${f.id}`} >\r\n                    <img src={f.photos.large ? f.photos.large : 'https://via.placeholder.com/100'} alt=\"avatar\"></img>\r\n                       <div> <span >{f.name}</span></div>\r\n                    </NavLink>}</span>\r\n                </div>\r\n    )\r\n\r\n    return <div className={style.profileFriends}>\r\n        <div className={style.headline}>My friends</div>\r\n        { props.status !== \"INPROGRESS\" ? \r\n        <div className={style.allFriend}>\r\n        {friends}\r\n        </div> : <img className={style.pending} src=\"https://posuda.lenta.com/local/templates/zwilling/img/loading.gif\"></img> }\r\n    </div>\r\n}\r\n\r\nlet mapStateToProps = (state: any) => {\r\n    return {\r\n        friends: state.friends.myFriends,\r\n        status: state.friends.status,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(ProfileFriends)","import React from 'react';\r\nimport style from './Post.module.css'\r\n\r\ninterface IProps {\r\n    foto: string;\r\n    message: string;\r\n}\r\n\r\nconst Post = (props: IProps) => {\r\n    return <div className={style.myPostsApp}>\r\n\r\n        <div className={style.post}>\r\n            <div className={style.headlinePost}>\r\n                <div className={style.imgPost}><img src={props.foto ? props.foto : 'https://pp.userapi.com/c840425/v840425508/681da/H8uCjuWrgn0.jpg'} alt=\"foto\"></img></div>\r\n                <div className={style.nikNamePost}>Roma kurilovich</div>\r\n            </div>\r\n            <div className={style.contentPost}><span>\r\n                {props.message}\r\n            </span></div>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Post","import React from 'react';\r\nimport style from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\n\r\ninterface IProps {\r\n    addPost: Function;\r\n    updatePostText: Function;\r\n    posts: any;\r\n    isAuth: boolean;\r\n    foto: string;\r\n    newText: string;\r\n}\r\n\r\nconst MyPosts = (props: IProps) => {\r\n\r\n    let onAddPostClick = () =>{\r\n        props.addPost()\r\n        props.updatePostText('')\r\n    }\r\n    let newPostTeaxtChange = (e: React.ChangeEvent<HTMLTextAreaElement>) =>{\r\n        let newValue = e.target.value;\r\n        props.updatePostText(newValue)\r\n    }\r\n\r\n    let postsElement = props.posts.map( (p :any) =>  <Post key={p.id} message={p.message}  foto={props.foto} /> )\r\n\r\n    return <div className={style.myPostsApp}>\r\n\r\n       { props.isAuth && <div className={style.addPost}>\r\n            <div className={style.textareaWithPhotosBlock}>\r\n                <div className={style.headlineAddPost}>\r\n                    \r\n                    <div className={style.imgAddPost}><img src={props.foto ? props.foto : 'https://pp.userapi.com/c840425/v840425508/681da/H8uCjuWrgn0.jpg'} alt=\"foto\"></img></div>\r\n                    <div className={style.nikNameAddPost}>Roma Kurilovich</div>\r\n                </div>\r\n                <div className={style.inputArea}>\r\n                    <textarea value={props.newText} onChange={newPostTeaxtChange}/>\r\n                    <button onClick={onAddPostClick}>add post</button>\r\n                    </div>\r\n            </div>\r\n        </div>}\r\n\r\n        <div className={style.posts}>\r\n            {postsElement}\r\n\r\n        </div>\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default MyPosts","import { API } from \"../api/axios-instance\";\r\n\r\nconst SET_PROFILE_INFO = 'PPR/SET_PROFILE_INFO';\r\nconst UPDATE_POST_TEXT = 'PPR/UPDATE_POST_TEXT';\r\nconst ADD_POST = 'PPR/ADD_POST';\r\nconst CHANGE_CONTACTS = 'PPR/CONTACT_CHANGE';\r\nconst  ABOUT_ME_CHANGE = 'PPR/ABOUT_ME_CHANGE';\r\nconst SET_STATUS = 'PPR/SET_STATUS';\r\n\r\nexport const statuses = {\r\n    NOT_INITIALIZED: 'NOT_INITIALIZED',\r\n    ERROR: 'ERROR',\r\n    INPROGRESS: 'INPROGRESS',\r\n    SUCCESS: 'SUCCESS',\r\n}\r\n\r\nconst initialState = {\r\n    status: statuses.NOT_INITIALIZED,\r\n    myPosts: {\r\n        postText: '',\r\n        posts: [\r\n            { id: 1, message: 'every day like birth day', likesCount: 777 },\r\n            { id: 2, message: 'hello', likesCount: 23 },\r\n            { id: 3, message: 'good day', likesCount: 11 },\r\n            { id: 4, message: 'good day', likesCount: 99 },\r\n        ],\r\n    },\r\n\r\n    profileInfo: {\r\n        fullName: 'Anonymous',\r\n        newValue: null,\r\n        newValueAboutMe: null,\r\n        newValueLookingForAJobDescription: null,\r\n        photos: {\r\n            small: 'https://via.placeholder.com/100',\r\n            large: 'https://via.placeholder.com/500',\r\n        },\r\n        contacts: {\r\n            vk: 'Anonymous can not have contacts',\r\n        }\r\n    },\r\n\r\n}\r\n\r\nconst profilePageReducer = (state = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_STATUS: {\r\n            return { ...state, status: action.status }\r\n        }\r\n        case SET_PROFILE_INFO : {\r\n            return { ...state, profileInfo: action.profileInfo }\r\n        }\r\n        case UPDATE_POST_TEXT: {\r\n            return { ...state, myPosts: { ... state.myPosts, postText: action.value }}\r\n        }\r\n        case ADD_POST: {\r\n            let newComment = {\r\n                id: 5,\r\n                message: state.myPosts.postText ,\r\n                likesCount: 0,\r\n            };\r\n            return { ...state, myPosts: { ... state.myPosts, posts: [newComment, ...state.myPosts.posts] }}\r\n        }\r\n        case CHANGE_CONTACTS: {\r\n            return {\r\n                ...state, profileInfo: {...state.profileInfo, contacts: {...state.profileInfo.contacts, [action.contactKey]: action.newValue}}\r\n            }\r\n        }\r\n        case ABOUT_ME_CHANGE:\r\n        {\r\n            return {\r\n                ...state, profileInfo: {...state.profileInfo, aboutMe: action.newValue  }\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const getProfileInfo = (userIdFromUrl: number) => (dispatch: Function) => {\r\n    dispatch(setStatus(statuses.INPROGRESS))\r\n    API.getProfile(userIdFromUrl)\r\n        .then((profile) => {\r\n            dispatch(setProfileInfo(profile.data));\r\n            dispatch(setStatus(statuses.SUCCESS))\r\n        })\r\n}\r\n\r\nexport const fetchSetNewPhotoOfAvatar = (file: any) => {\r\n    return async (dispatch: Function) =>{\r\n        const res = await API.setNewPhotoOfAvatar(file)\r\n    }\r\n}\r\n\r\nexport const putNewInfoThunk = () => (dispatch: Function, getState: Function) =>{\r\n    let state = getState();\r\n    API.putNewInfo(state.profilePage.profileInfo)\r\n}\r\n\r\n\r\nexport const setProfileInfo = (profileInfo: object) => ({type: SET_PROFILE_INFO, profileInfo: profileInfo,})\r\nexport const updatePostText = (value: string) => ({type: UPDATE_POST_TEXT, value: value,})\r\nexport const addPost = () => ({type: ADD_POST})\r\nexport const aboutMeChange = (newValue: string) => ({type: ABOUT_ME_CHANGE, newValue: newValue,})\r\nexport const setStatus = (status: string) => ({ type: SET_STATUS, status: status });\r\n\r\nexport const onContactChange = (newValue: string, key: string) => ({\r\n        type: CHANGE_CONTACTS,\r\n        newValue: newValue,\r\n        contactKey: key,\r\n})\r\n\r\n\r\n\r\n\r\nexport default profilePageReducer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MyPosts from './MyPosts';\r\nimport { updatePostText, addPost } from '../../../redux/profilePageReducer';\r\n\r\ninterface IProps {\r\n    updatePostText: Function;\r\n    addPost: Function;\r\n    posts: any;\r\n    newText: string;\r\n    foto:string;\r\n    isAuth: boolean;\r\n    \r\n}\r\n\r\nclass MyPostsContainer extends React.Component<IProps>{\r\n    \r\n    render() {\r\n        return  < MyPosts {...this.props}/>\r\n        \r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: any) =>{\r\n    return{\r\n       posts: state.profilePage.myPosts.posts,\r\n       newText: state.profilePage.myPosts.postText,\r\n       foto: state.profilePage.profileInfo.photos.large,\r\n       isAuth: state.login.isAuth,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Function) =>{\r\n    return{\r\n        updatePostText: (value: string)=>{dispatch(updatePostText(value))},\r\n        addPost: ()=>{ dispatch(addPost()) }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPostsContainer);","import React, { useRef } from 'react'\r\nimport style from './ProfileInfo.module.css'\r\n\r\n\r\nconst UploadAvatarForm = (props: any) => {\r\n\r\n    const inputEl = useRef(null)\r\n    const onSaveAvatar = () =>{\r\n        props.setEditAvatarMode(false)\r\n    }\r\n    const onUpload = (e: any) =>{\r\n        e.preventDefault();\r\n        let file = e.target[0].files[0];\r\n        props.fetchSetNewPhotoOfAvatar(file);\r\n    }\r\n    return (\r\n        <form onSubmit={onUpload}>\r\n            <input ref={inputEl} type='file' className={style.button}/>\r\n            <button type='submit' className={style.button} onClick={onSaveAvatar}>Upload</button>\r\n        </form>\r\n    )\r\n}\r\nexport default UploadAvatarForm;","import React, { useState, useEffect } from 'react';\r\nimport style from './ProfileInfo.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\nimport UploadAvatarForm from './UploadAvatarForm';\r\n\r\ninterface IProps {\r\n    profileInfo: any;\r\n    isAuth: boolean;\r\n    myId?: number;\r\n    subscribe: Function;\r\n    unSubscribe: Function;\r\n    friends: any;\r\n    fetchSetNewPhotoOfAvatar: Function;\r\n    onContactChange: Function;\r\n    putNewInfo: Function;\r\n    getProfileInfo: Function;\r\n    aboutMeChange: Function;\r\n    status: string;\r\n}\r\n\r\nconst ProfileInfo = (props: IProps) => {\r\n\r\n    let [followed, setFollow] = useState(false)\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [editAvatarMode, setEditAvatarMode] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setFollow(false)\r\n        if (!!props.friends) {\r\n            props.friends\r\n                .map((f: any) => {\r\n                    if (f.id === props.profileInfo.userId) {\r\n                        setFollow(true)\r\n                    }\r\n                })\r\n        }\r\n    }, [props.profileInfo.userId])\r\n\r\n    const onSaveNewInfo = () => {\r\n        setEditMode(false)\r\n        props.putNewInfo()\r\n    }\r\n\r\n    const onSubscribeClick = () => {\r\n        let userId = props.profileInfo.userId;\r\n        props.subscribe(userId);\r\n        setFollow(true)\r\n    }\r\n    const onUnSubscribeClick = () => {\r\n        let userId = props.profileInfo.userId;\r\n        props.unSubscribe(userId);\r\n        setFollow(false)\r\n    }\r\n\r\n    return <div className={style.profileInfo}>\r\n\r\n        {props.status !== \"INPROGRESS\" ? <div className={style.userInfo}>\r\n            <div className={style.buttonWithAvatar}>\r\n                <div className={style.avatar}>\r\n                    <img src={props.profileInfo.photos.large ? props.profileInfo.photos.large : 'https://pp.userapi.com/c840425/v840425508/681da/H8uCjuWrgn0.jpg'} alt=\"foto\"></img>\r\n                </div>\r\n                {props.isAuth &&\r\n                    <div className={style.buttonForUser}>\r\n                        {(props.profileInfo.userId === props.myId) ? <>\r\n                            {editAvatarMode ? <UploadAvatarForm\r\n                                setEditAvatarMode={setEditAvatarMode}\r\n                                fetchSetNewPhotoOfAvatar={props.fetchSetNewPhotoOfAvatar}                        >\r\n                            </UploadAvatarForm> :\r\n                                <div className={style.button} onClick={() => setEditAvatarMode(true)}>Edit avatar</div>}\r\n                            {editAvatarMode && <div className={style.button} onClick={() => setEditAvatarMode(false)}>Back</div>}\r\n                            {editMode ? <div className={style.button} onClick={onSaveNewInfo}>Save</div> :\r\n                                <div className={style.button} onClick={() => setEditMode(true)}>Edit my contact</div>}\r\n                        </> : <>\r\n                                <div className={style.button}><NavLink to={'/dialogs/' + props.profileInfo.userId}>Send Message</NavLink></div>\r\n                                {followed ?\r\n                                    <div className={style.button} onClick={onUnSubscribeClick}>Unsubscribe</div> :\r\n                                    <div className={style.button} onClick={onSubscribeClick}>Subscribe</div>\r\n                                }</>}\r\n                    </div>}\r\n            </div>\r\n            <div className={style.myContactsAndAboutMe}>\r\n                <div className={style.myContacts}>\r\n                    <div className={style.spanMyContacts}>My contacts</div>\r\n                    {Object.keys(props.profileInfo && props.profileInfo.contacts).map(key => {\r\n                        return <div className={style.oneContactKey} key={key}>\r\n                            <span className={style.oneContactKeySpan}>  {key} :\r\n                            {editMode && <input value={props.profileInfo.contacts[key]} onChange={(e: any) => {\r\n                                    let newValue = e.target.value;\r\n                                    props.onContactChange(newValue, key)\r\n                                }} />}\r\n                                {!editMode && props.profileInfo.contacts[key]}\r\n                            </span>\r\n                        </div>\r\n                    })}\r\n\r\n                </div>\r\n                {!editMode && <div className={style.aboutMe}>\r\n                    <div> About me:</div>  {props.profileInfo.aboutMe}\r\n                </div>}\r\n                {editMode && <div className={style.aboutMe}>\r\n                    <div> About me:</div> <input value={props.profileInfo.aboutMe} onChange={(e: any) => props.aboutMeChange(e.target.value)} />\r\n                </div>}\r\n            </div>\r\n        </div> : <img src=\"https://posuda.lenta.com/local/templates/zwilling/img/loading.gif\"></img>}\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import { API } from \"../api/axios-instance\";\r\n\r\nconst SET_STATUS = 'PR/SET_STATUS';\r\nconst SET_USERS = 'PR/SET_USERS';\r\nconst SET_TOTAL_COUNT = 'PR/SET_TOTAL_COUNT';\r\nconst SUBSCRIBE = 'PR/SUBSCRIBE';\r\nconst UNSUBSCRIBE = 'PR/UNSUBSCRIBE';\r\n\r\nexport const statuses = {\r\n    NOT_INITIALIZED: 'NOT_INITIALIZED',\r\n    ERROR: 'ERROR',\r\n    INPROGRESS: 'INPROGRESS',\r\n    SUCCESS: 'SUCCESS',\r\n}\r\n\r\nlet initialState = {\r\n    status: statuses.NOT_INITIALIZED,\r\n    users: [],\r\n    totalCount: 0,\r\n\r\n}\r\n\r\nconst peopleReducer = (state = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_STATUS: {\r\n            return { ...state, status: action.status }\r\n        }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_TOTAL_COUNT: {\r\n            return { ...state, totalCount: action.totalCount }\r\n        }\r\n        case SUBSCRIBE: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map((u: any) => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: !u.followed }\r\n                    } else {\r\n                        return u;\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        case UNSUBSCRIBE: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map((u: any) => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: !u.followed }\r\n                    } else {\r\n                        return u;\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUsers = (users: any) => ({ type: SET_USERS, users: users });\r\nexport const setStatus = (status: string) => ({ type: SET_STATUS, status: status });\r\nexport const setTotalCount = (totalCount: number) => ({ type: SET_TOTAL_COUNT, totalCount: totalCount });\r\nexport const subscribe = (userId: number) => ({ type: SUBSCRIBE, userId: userId });\r\nexport const unsubscribe = (userId: number) => ({ type: UNSUBSCRIBE, userId: userId });\r\n\r\n\r\nexport const getPeopleThunk = (pageNumber: number) => (dispatch: Function) => {\r\n    if (initialState.status === statuses.NOT_INITIALIZED) {\r\n        dispatch(setStatus(statuses.INPROGRESS));\r\n        API.getPeople(pageNumber)\r\n            .then((res: any) => {\r\n                dispatch(setStatus(statuses.SUCCESS))\r\n                dispatch(setUsers(res.data.items))\r\n                dispatch(setTotalCount(res.data.totalCount))\r\n            })\r\n    }\r\n}\r\nexport const subscribeThunk = (userId: number) => (dispatch: Function) => {\r\n    API.subscribe(userId)\r\n    .then((res: any )=>{\r\n       dispatch(subscribe(userId));\r\n    })\r\n}\r\n\r\nexport const unsubscribeThunk = (userId: number) => (dispatch: Function) => {\r\n    API.unSubscribe(userId)\r\n    .then ((res)=>{\r\n        dispatch(unsubscribe(userId));\r\n    })\r\n}\r\n\r\n\r\nexport default peopleReducer;","import { API } from \"../api/axios-instance\";\r\n\r\nconst SET_STATUS = 'FR/SET_STATUS';\r\nconst SET_USERS = 'FR/SET_USERS';\r\nconst UNSUBSCRIBE = 'FR/UNSUBSCRIBE';\r\nconst SET_DELETE_USERS = 'FR/SET_DELETE_USERS';\r\nconst SET_FRIENDS = 'FR/SET_FRIENDS';\r\n\r\nexport const statuses = {\r\n    NOT_INITIALIZED: 'NOT_INITIALIZED',\r\n    ERROR: 'ERROR',\r\n    INPROGRESS: 'INPROGRESS',\r\n    SUCCESS: 'SUCCESS',\r\n}\r\n\r\nlet initialState = {\r\n    status: statuses.NOT_INITIALIZED,\r\n    allUsers: [],\r\n    myFriends: [],\r\n    totalCount: null,\r\n}\r\n\r\nconst friendsReducer = (state = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_STATUS: {\r\n            return { ...state, status: action.status }\r\n        }\r\n        case SET_USERS: {\r\n            return { ...state, allUsers: state.allUsers.concat(action.users) }\r\n        }\r\n        case SET_FRIENDS: {\r\n            \r\n            return { ...state, myFriends: state.allUsers.filter((u: any) => u.followed) }\r\n        }\r\n        case SET_DELETE_USERS: {\r\n            return { ...state, allUsers: [] }\r\n        }\r\n        case UNSUBSCRIBE: {\r\n            return {\r\n                ...state,\r\n                allUsers: state.allUsers.map((u: any) => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: !u.followed }\r\n                    } else {\r\n                        return u;\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUsers = (users: Array<object>) => ({ type: SET_USERS, users: users });\r\nexport const setFriends = () => ({ type: SET_FRIENDS });\r\nexport const setDeleteUsers = () => ({ type: SET_DELETE_USERS });\r\nexport const setStatus = (status: string) => ({ type: SET_STATUS, status: status });\r\nexport const unsubscribe = (userId: number) => ({ type: UNSUBSCRIBE, userId: userId });\r\n\r\nexport const unsubscribeFriend = (userId: number) => (dispatch: Function) => {\r\n    API.unSubscribe(userId)\r\n        .then((res) => {\r\n            dispatch(unsubscribe(userId))\r\n            dispatch(setFriends())\r\n        })\r\n}\r\n\r\nfunction foo() {\r\n    return (new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            resolve(\"done!\");\r\n        }, 10)   \r\n    }))\r\n}\r\n\r\n\r\nexport const getFriendsThunk = () => async (dispatch: Function, getState: any) => {\r\n    let state = getState();\r\n    if (state.friends.status !== statuses.INPROGRESS){\r\n        dispatch(setStatus(statuses.INPROGRESS))\r\n    let totalCount = 0;\r\n    const res: any = await API.getPeople(1);\r\n    totalCount = res.data.totalCount\r\n\r\n    dispatch(setDeleteUsers())\r\n\r\n    let countRequest = Math.ceil(totalCount / 100)\r\n    for (let i = 1; i <= countRequest; i++) {\r\n        await foo()\r\n        let res = await API.getBundleOfUsers(i)\r\n        dispatch(setUsers(res.data.items))\r\n    }\r\n\r\n    dispatch(setFriends())\r\n    dispatch(setStatus(statuses.SUCCESS))\r\n}\r\n     }\r\n    \r\n\r\nexport default friendsReducer; ","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ProfileInfo from './ProfileInfo'\r\nimport { getProfileInfo, fetchSetNewPhotoOfAvatar, onContactChange, putNewInfoThunk, aboutMeChange } from '../../../redux/profilePageReducer';\r\nimport {  RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { getPeopleThunk, subscribeThunk, unsubscribeThunk } from '../../../redux/peopleReducer';\r\nimport { getFriendsThunk } from '../../../redux/friendsPageReducer';\r\nimport { me } from '../../../redux/loginReducer';\r\n\r\ninterface IProps {\r\n    profileInfo: any;\r\n    getProfileInfo: Function;\r\n    isAuth:boolean;\r\n    getPeople: Function;\r\n    getFriends: Function;\r\n    myId?: number;\r\n    subscribe: Function;\r\n    unSubscribe: Function;\r\n    friends: any;\r\n    fetchSetNewPhotoOfAvatar: Function;\r\n    onContactChange: Function;\r\n    putNewInfo: Function;\r\n    aboutMeChange: Function;\r\n    me: Function;\r\n    status: string;\r\n}\r\n\r\ninterface HomeRouterProps {\r\n    title: string; \r\n  }\r\n  \r\n  interface HomeProps extends RouteComponentProps<HomeRouterProps> {\r\n    match: any;\r\n  }\r\n\r\n\r\nclass ProfileInfoContainer extends React.Component<IProps & HomeProps>{\r\n    constructor(props: IProps & HomeProps) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount = () =>{\r\n        let userIdFromUrl = this.props.match.params.userId;\r\n        this.props.getProfileInfo(userIdFromUrl);\r\n        this.props.getPeople(1);\r\n        this.props.getFriends();\r\n        this.props.me();\r\n    }\r\n    \r\n    componentDidUpdate(prevProps: any) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n          this.props.getProfileInfo(this.props.match.params.userId);\r\n        }\r\n      }\r\n\r\n    render() {\r\n        return  <ProfileInfo {...this.props}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: any) =>{\r\n    return{\r\n        profileInfo: state.profilePage.profileInfo,\r\n        isAuth: state.login.isAuth,\r\n        myId: state.login.userInfo.userId,\r\n        friends: state.friends.myFriends,\r\n        status: state.profilePage.status,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Function) =>{\r\n    return{\r\n        getProfileInfo: (userIdFromUrl : number)=>{dispatch(getProfileInfo(userIdFromUrl))},\r\n        getPeople: (pageNumber: number) =>{dispatch(getPeopleThunk(pageNumber))},\r\n        getFriends: ()=>{dispatch(getFriendsThunk())},\r\n        subscribe: (userId: number) => dispatch(subscribeThunk(userId)),\r\n        unSubscribe:(userId: number) => dispatch(unsubscribeThunk(userId)),\r\n        fetchSetNewPhotoOfAvatar:(file:any) => dispatch(fetchSetNewPhotoOfAvatar(file)),\r\n        onContactChange:(newValue: string, key: string) =>dispatch(onContactChange(newValue,key)),\r\n        putNewInfo:()=> dispatch(putNewInfoThunk()),\r\n        aboutMeChange:(newValue: string)=>dispatch(aboutMeChange(newValue)),\r\n        me:()=>dispatch(me()),\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ProfileInfoContainer));","import React from 'react';\r\nimport style from './Profile.module.css'\r\nimport MyAlbum from './MyAlbum/MyAlbum';\r\nimport ProfileFriends from './ProfileFriends/ProfileFriends';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfoContainer from './ProfileInfo/ProfileInfoContainer';\r\nimport { connect } from 'react-redux';\r\nimport {  RouteComponentProps, withRouter, Redirect  } from 'react-router-dom';\r\n\r\ninterface HomeRouterProps {\r\n    title: string; \r\n  }\r\n\r\ninterface IProps extends RouteComponentProps<HomeRouterProps> {\r\n    nikName: string;\r\n    match: any;\r\n}\r\n\r\nconst Profile = (props: IProps) =>{\r\n\r\n    let userId = props.match.params.userId;\r\n\r\n    if (userId === undefined) {\r\n        return <Redirect to={`/login`} />\r\n    }\r\n\r\n    return <div className={style.profile}>\r\n        <span className={style.nikName}>{props.nikName}</span>\r\n\r\n        <ProfileInfoContainer />\r\n        <MyAlbum/>\r\n        <MyPostsContainer/>\r\n        <ProfileFriends/>\r\n  \r\n        \r\n        </div>\r\n}\r\n\r\nlet mapStateToProps = (state: any) =>({\r\n    nikName: state.profilePage.profileInfo.fullName,\r\n    status: state.profilePage.status\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, null)(Profile))","import React from 'react';\r\nimport s from './Message.module.css'\r\n\r\nconst Message = (props) => {\r\n    debugger\r\n    return (\r\n        <div className={s.dialog}> <b>{props.message.senderName}: </b>{props.message.body}</div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport s from './DialogItem.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\n\r\nconst DialogItem = (props) => {\r\n  \r\n    return (\r\n      \r\n        <div className={s.dialog}>\r\n            <NavLink exact to={'/dialogs/' + props.id} activeClassName={s.active}>  {props.name} </NavLink>\r\n        </div>\r\n    )\r\n}\r\nexport default DialogItem;\r\n","import { API } from \"../api/axios-instance\";\r\n\r\nconst SET_MESSAGES = 'MPP/SET_MESSAGES';\r\nconst SET_DIALOGS = 'MPP/SET_DIALOGS';\r\nconst ADD_MESSAGE ='MPP/ADD_MESSAGE';\r\nconst SET_CURRENT_DISALOGS_ID ='MPP/SET_CURRENT_DISALOGS_ID';\r\n\r\nlet initialState ={\r\n    dialogs: [],\r\n    messages: [    ],\r\n    currentDialogId: null,\r\n    message: '',\r\n}\r\n\r\nexport let setMessagesAC = (messages: string) => ({type: SET_MESSAGES , messages})\r\nexport let setDialodgsAC = (dialogs: any) => ({type: SET_DIALOGS , dialogs})\r\nexport let setCurrentDialogIdAC = (id: number) => ({type: SET_CURRENT_DISALOGS_ID , id})\r\nexport let addMessageAC = (value: string) => ({type: ADD_MESSAGE , value})\r\nexport const onAddMessage = (text: string) => ({type: 'ADD-MESSAGE', text: text })\r\n\r\n\r\n\r\nconst messagePageReducer = (state = initialState, action: any) => {\r\n\r\n    switch (action.type){ \r\n        case ADD_MESSAGE:{\r\n          return {...state, message : action.value}\r\n          \r\n        }\r\n\r\n        case SET_DIALOGS:{\r\n            return { ...state , dialogs: action.dialogs}\r\n        }\r\n\r\n        case SET_MESSAGES:{\r\n            return { ...state , messages: action.messages}\r\n        }\r\n\r\n        case SET_CURRENT_DISALOGS_ID:{\r\n            return { ...state , currentDialogId: action.id}\r\n        }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const sendMessageThunk = (userId: number) => (dispatch: Function, getState: any) => {\r\n\r\n    let state = getState();\r\n    let message = state.messagePage.message\r\n\r\n    \r\n    API.sendMessage(userId, message)\r\n            .then(() => API.getMessage(userId))\r\n            .then((response: any) => {\r\n                dispatch(addMessageAC(''))\r\n                dispatch(setMessagesAC(response.data.items))\r\n                \r\n                debugger\r\n            })    \r\n}\r\n\r\nexport const getDialogsAndMessageThunk = (userId: any) => (dispatch: Function, getState: any) => {\r\n\r\n    let state = getState();\r\n\r\n    if (userId) {\r\n        API.updateDialogs(userId)\r\n            .then(() => API.getDialogs())\r\n            .then((response: any) => {\r\n                dispatch(setDialodgsAC(response.data));\r\n                dispatch(setCurrentDialogIdAC(userId));\r\n            })\r\n            .then(() => API.getMessage(userId))\r\n            .then((response: any) => {\r\n                dispatch(setMessagesAC(response.data.items));\r\n                debugger\r\n            })\r\n\r\n    } else {\r\n        API.getDialogs()\r\n            .then((response: any) => {\r\n                dispatch(setDialodgsAC(response.data))\r\n            })\r\n    }   \r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default messagePageReducer;","import React, { useEffect } from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport Message from './Message/Message'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport { connect } from \"react-redux\";\r\nimport {  setDialodgsAC, setCurrentDialogIdAC, setMessagesAC, addMessageAC, sendMessageThunk, getDialogsAndMessageThunk } from '../../redux/messagePageReducer'\r\nimport {  RouteComponentProps, withRouter, Redirect } from 'react-router-dom';\r\n\r\ninterface HomeRouterProps {\r\n    title: string; \r\n  }\r\n  interface IProps extends RouteComponentProps<HomeRouterProps> {\r\n    sendMessageThunk: Function;\r\n    dialogs: Array<object>;\r\n    messages: Array<object>;\r\n    getDialogsAndMessageThunk: Function;\r\n    addMessage: Function;\r\n    message: string;\r\n    match: any;\r\n    isAuth: boolean;\r\n  }\r\n\r\n\r\n\r\nconst Dialogs = (props: IProps) => {\r\n\r\n    let onSendMessage = () => {\r\n        let userId = props.match.params.userId;\r\n        props.sendMessageThunk(userId)\r\n    }\r\n\r\n    let dialogsElements = props.dialogs.map((dialog: any) => <div key={dialog.id} className={s.oneDialog}> <DialogItem name={dialog.userName} id={dialog.id} /> </div>);\r\n    let messageElements = props.messages.map((m: any) => <Message key={m.id} message={m} />);\r\n    let userId = props.match.params.userId;\r\n\r\n    useEffect(() => {\r\n        let userId = props.match.params.userId;\r\n        props.getDialogsAndMessageThunk(userId)\r\n    }, [userId]);\r\n\r\n    if (props.isAuth === false) {\r\n        return <Redirect to={`/login`} />\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div><div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            </div>\r\n            <div className={s.messageArea}> <div className={s.message}>\r\n                {messageElements}\r\n            </div>\r\n\r\n                <div className={s.textAndButton}><textarea className={s.textarea} value={props.message} onChange={(e) => { props.addMessage(e.currentTarget.value) }} ></textarea>\r\n                    <button onClick={onSendMessage}>Send</button></div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nlet mapStateToProps = (state: any) => {\r\n\r\n    return {\r\n        dialogs: state.messagePage.dialogs,\r\n        messages: state.messagePage.messages,\r\n        message: state.messagePage.message,\r\n        isAuth: state.login.isAuth,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Function) => {\r\n\r\n    return {\r\n        setDialogs: (dialogs: any) => {dispatch(setDialodgsAC(dialogs))},\r\n        setCurrentDialogId: (id: number) => {dispatch(setCurrentDialogIdAC(id))},\r\n        setMessages: (messages: string) => {dispatch(setMessagesAC(messages))},\r\n        addMessage: (value: string) => {dispatch(addMessageAC(value)) },\r\n        sendMessageThunk:(userId: number)=>{dispatch(sendMessageThunk(userId))},\r\n        getDialogsAndMessageThunk:(userId: number)=>{dispatch(getDialogsAndMessageThunk(userId))},\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Dialogs));\r\n","import React from 'react'\r\nimport style from './Login.module.css'\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport { loginTC } from '../../redux/loginReducer';\r\nimport { Redirect } from 'react-router';\r\n\r\ninterface IProps {\r\n    myId: number;\r\n    login: Function;\r\n}\r\n\r\nconst Login = (props: IProps) => {\r\n    debugger\r\n    if (props.myId !== null) {\r\n        return <Redirect to={`/profile/${props.myId}`} />\r\n    }\r\n\r\n    const onSubmit = (formData: any) => {\r\n        props.login(formData.login, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    return <div className={style.login}>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\n\r\nconst LoginForm = (props: any) => {\r\n    return (\r\n        <form className={style.loginBox} onSubmit={props.handleSubmit}>\r\n\r\n            <div>mail:  kamazaff22@gmail.com </div>\r\n            <div>password: pentagon11 </div>\r\n            <h1>Login</h1>\r\n\r\n                <div className={style.form_row}>\r\n                    <Field component={\"input\"} name={\"login\"} type={\"text\"}  placeholder='Username'/>\r\n                </div>\r\n\r\n                <div className={style.form_row}>\r\n                    <Field component={\"input\"} name={\"password\"} type={\"password\"} placeholder='Password' />\r\n                </div>\r\n\r\n                <button name={\"buttonLogin\"} type={\"submit\"} value={\"Sing in\"} >Sing in</button>\r\n\r\n           \r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\n\r\nlet mapStateToProps = (state: any) => {\r\n    return {\r\n        myId: state.login.userInfo.userId,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Function) => {\r\n    return {\r\n        login: (login: string, password: string, rememberMe: boolean) => {\r\n            dispatch(loginTC(login, password, rememberMe))\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login) ","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './OnePerson.module.css';\r\n\r\ninterface IProps {\r\n    user: any;\r\n    subscribe: Function;\r\n    unSubscribe: Function;\r\n}\r\n\r\nconst OnePerson = ({user, subscribe, unSubscribe} :IProps) => {\r\n\r\n    const onSubscribeClick = (e: any) =>{\r\n        let clikedButton = e.target;\r\n        let userId = +clikedButton.dataset.userId;\r\n        subscribe(userId);\r\n    }\r\n    const onUnSubscribeClick = (e: any) => {\r\n\r\n        let clikedButton = e.target;\r\n        let userId = +clikedButton.dataset.userId;\r\n        unSubscribe(userId)\r\n\r\n    }\r\n    return(\r\n        <div className={style.oneUser}>\r\n\r\n                <div className={style.userName}>\r\n                    <NavLink to={`/profile/${user.id}`} >\r\n                        <span >{user.name}</span>\r\n                    </NavLink>\r\n                </div>\r\n\r\n                <div className={style.imgDiv}>\r\n                    <img src={user.photos.small == null ? 'https://via.placeholder.com/100' : user.photos.small} alt=\"foto\"/>\r\n                </div>\r\n\r\n                <NavLink to={'/dialogs/' + user.id}>Send Message</NavLink>\r\n                {user.followed ?\r\n                    <div className={style.buttonFollow}> <button data-user-id={user.id} onClick={onUnSubscribeClick}>Unsubscribe</button> </div>:\r\n                    <div className={style.buttonFollow}> <button data-user-id={user.id} onClick={onSubscribeClick}>Subscribe</button> </div> }\r\n\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\nexport default OnePerson;","import React from 'react';\r\nimport style from \"./People.module.css\";\r\nimport styled from 'styled-components'\r\n\r\ninterface IProps {\r\n    totalCount: number;\r\n    pageNumber: number;\r\n    setNewPageNumber: Function;\r\n}\r\n\r\nfunction Pagination(props: IProps){\r\n    let pageSize = 24;\r\n    \r\n    let pagesCount = Math.ceil(props.totalCount/pageSize);\r\n    let buttons = [];\r\n\r\n    for (let i = 1; i < pagesCount + 1; i++ ){\r\n\r\n        buttons.push(<ButtonForPagination key={i} selected={props.pageNumber===i} onClick={ () => { \r\n             props.setNewPageNumber(i) ;\r\n            }}>{i}</ButtonForPagination>)\r\n    }\r\n\r\n    return(\r\n        <div className={style.allButtons}>\r\n            {buttons}\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface IStyledDiv {\r\n   selected: boolean\r\n}\r\n\r\nlet ButtonForPagination = styled('div')<IStyledDiv>`\r\nborder: 1px solid grey;\r\npadding:2px;\r\n\r\nbackground-color: ${(props: any) => props.selected ? '#8298BE' : 'white'};\r\ncolor: ${(props: any) => props.selected ? '#D3D3AA' : 'black'};\r\ncursor: ${(props: any) => props.selected ? 'default' : 'pointer'};\r\n\r\n`\r\n\r\nexport default Pagination","import React from 'react'\r\nimport style from './People.module.css'\r\nimport OnePerson from '../OnePerson/OnePerson';\r\nimport Pagination from './Pagination';\r\n\r\ninterface IProps {\r\n    users: any;\r\n    unSubscribe: Function;\r\n    subscribe: Function;\r\n    totalCount: number;\r\n    pageNumber: number;\r\n    setNewPageNumber: Function;\r\n    status: string;\r\n}\r\n\r\nlet People = (props: IProps) => {\r\n   \r\n    if (!props.users.length) {\r\n        return <div> People not found</div>\r\n    }\r\n\r\n    return <div className={style.people}>\r\n        {  props.status !== 'INPROGRESS' ? \r\n        <div className={style.divContainer}>\r\n            {props.users.map((user: any) => <div key={user.id}><OnePerson user={user} unSubscribe={props.unSubscribe} subscribe={props.subscribe}/>\r\n            </div>)}\r\n</div>  : <img src=\"https://posuda.lenta.com/local/templates/zwilling/img/loading.gif\"></img>  }\r\n            <div className={style.pagination}>\r\n        <Pagination totalCount={props.totalCount} pageNumber={props.pageNumber} setNewPageNumber={props.setNewPageNumber} />\r\n        </div>\r\n\r\n    </div>\r\n}\r\nexport default People","import React, { useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { getPeopleThunk, subscribeThunk, unsubscribeThunk } from \"../../redux/peopleReducer\";\r\nimport People from './People';\r\n\r\n\r\ninterface IProps {\r\n    getPeopleThunk: Function;\r\n    users: any;\r\n    status: string;\r\n    totalCount: number;\r\n    unSubscribe: Function;\r\n    subscribe: Function;\r\n\r\n}\r\n\r\n\r\nlet PeopleContainer = (props: IProps) => {\r\n\r\n    let [pageNumber, setNewPageNumber] = useState(1);\r\n\r\n    useEffect(() => {\r\n        props.getPeopleThunk(pageNumber)\r\n    }, [pageNumber])\r\n\r\n\r\n\r\n    {\r\n        return <People {...props} setNewPageNumber={setNewPageNumber} pageNumber={pageNumber}  />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: any) => {\r\n    return {\r\n        users: state.people.users,\r\n        status: state.people.status,\r\n        totalCount: state.people.totalCount,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Function) => {\r\n    return {\r\n        getPeopleThunk: (pageNumber: number) => dispatch(getPeopleThunk(pageNumber)),\r\n        subscribe: (userId: number) => dispatch(subscribeThunk(userId)),\r\n        unSubscribe:(userId: number) => dispatch(unsubscribeThunk(userId)),\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PeopleContainer);","import React from 'react'\r\nimport style from './Friends.module.css'\r\nimport OnePerson from '../OnePerson/OnePerson';\r\n\r\ninterface IProps {\r\n    friends: any;\r\n    unsubscribe: Function;\r\n    subscribe: Function;\r\n    status: string;\r\n}\r\n\r\nlet Friends = (props: IProps) => {\r\n    debugger\r\n    return <>\r\n    {props.status !== \"INPROGRESS\" ? \r\n        <div className={style.friends}>\r\n            {props.friends.map((friend: any) =>\r\n                <div key={friend.id}>\r\n                    <OnePerson user={friend} subscribe={props.subscribe} unSubscribe={props.unsubscribe} />\r\n                </div>)}\r\n            </div> : <img src=\"https://posuda.lenta.com/local/templates/zwilling/img/loading.gif\"></img>\r\n        }\r\n    </>\r\n\r\n}\r\nexport default Friends","import React, { useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport Friends from './Friends';\r\nimport { getFriendsThunk, unsubscribeFriend } from '../../redux/friendsPageReducer';\r\nimport { subscribeThunk } from '../../redux/peopleReducer';\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\n\r\ninterface IProps {\r\n    getFriends: Function;\r\n    friends: any;\r\n    unsubscribe: Function;\r\n    totalCount: number;\r\n    subscribe: Function;\r\n    isAuth: boolean;\r\n    status: string;\r\n}\r\n\r\nlet FriendsContainer = (props: IProps) => {\r\n\r\n    useEffect(()=>{\r\n        props.getFriends()\r\n    }, [props.friends.lenght])\r\n\r\n    if (props.isAuth === false) {\r\n        return <Redirect to={`/login`} />\r\n    }\r\n\r\n        return <Friends {...props} />\r\n    \r\n}\r\n\r\nlet mapStateToProps = (state: any) => {\r\n    return {\r\n        totalCount: state.people.totalCount,\r\n        friends: state.friends.myFriends,\r\n        isAuth: state.login.isAuth,\r\n        status: state.friends.status,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Function) => {\r\n    return {\r\n        getFriends: ()=>{dispatch(getFriendsThunk())},\r\n        unsubscribe: (userId: number)=>{dispatch(unsubscribeFriend(userId))},\r\n        subscribe: (userId: number) =>{dispatch(subscribeThunk(userId))},\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FriendsContainer);","import React from 'react';\nimport './App.css';\nimport Header from './ui/Header/Header';\nimport Profile from './ui/Profile/Profile';\nimport { Route} from \"react-router-dom\";\nimport Dialogs from './ui/Dialogs/Dialogs';\nimport Login from './ui/Login/Login';\nimport PeopleContainer from './ui/People/PeopleContainer';\nimport FriendsContainer from './ui/Friends/FriendsContainer';\n\nconst App: Function = (props: any) => {\n  return (\n    <div className=\"app-wrapper\">\n      <Header />\n      <div className='app-wrapper-content'>\n        <Route path='/dialogs/:userId?' render={ () => <Dialogs/>} />\n        <Route path='/profile/:userId?' render={ () => <Profile />} />\n        <Route path='/people' render={ () => <PeopleContainer />} />\n        <Route path='/login' render={ () => <Login />} />\n        <Route path='/friends' render={ () => <FriendsContainer/>} />\n      </div>\n    </div>\n  );\n}\n   \n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport profilePageReducer from './profilePageReducer';\r\nimport {reducer as formReducer } from 'redux-form'\r\nimport loginReducer from './loginReducer';\r\nimport peopleReducer from './peopleReducer';\r\nimport friendsReducer from './friendsPageReducer';\r\nimport messagePageReducer from './messagePageReducer';\r\n\r\nlet combinedReducers = combineReducers({\r\n    profilePage: profilePageReducer,\r\n    form: formReducer,\r\n    login: loginReducer,\r\n    people: peopleReducer,\r\n    friends: friendsReducer,\r\n    messagePage: messagePageReducer,\r\n});\r\n\r\n\r\nlet store = createStore(combinedReducers,applyMiddleware(thunk));\r\nwindow.store = store;\r\nexport default store ; \r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from './redux/store';\n\n\nReactDOM.render(\n<Provider store={store}>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n</Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3NzE_\",\"dialogsItems\":\"Dialogs_dialogsItems__2QaFI\",\"message\":\"Dialogs_message__7Zvyj\",\"oneDialog\":\"Dialogs_oneDialog__2fRgn\",\"textAndButton\":\"Dialogs_textAndButton__tWsZQ\",\"textarea\":\"Dialogs_textarea__29yrG\",\"messageArea\":\"Dialogs_messageArea__2E1Ja\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1oq4p\",\"myPostsApp\":\"Post_myPostsApp__NMwMe\",\"imgPost\":\"Post_imgPost__3D3K2\",\"contentPost\":\"Post_contentPost__1SGzd\",\"headlinePost\":\"Post_headlinePost__ovWI-\",\"nikNamePost\":\"Post_nikNamePost__2NI7_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"divContainer\":\"People_divContainer__c7gWe\",\"allButtons\":\"People_allButtons__1w_mj\",\"pagination\":\"People_pagination__3J0L2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileFriends\":\"ProfileFriends_profileFriends__16JRB\",\"oneFriend\":\"ProfileFriends_oneFriend__EJciZ\",\"allFriend\":\"ProfileFriends_allFriend__1g5bW\",\"headline\":\"ProfileFriends_headline__Hnvsc\",\"pending\":\"ProfileFriends_pending__1faXm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"divContainer\":\"OnePerson_divContainer__2Bt7w\",\"imgDiv\":\"OnePerson_imgDiv__1FEtZ\",\"spanUsersName\":\"OnePerson_spanUsersName__4HXw4\",\"oneUser\":\"OnePerson_oneUser__3ykt2\",\"userName\":\"OnePerson_userName__3ymju\",\"buttonFollow\":\"OnePerson_buttonFollow__3tkLQ\",\"pagination\":\"OnePerson_pagination__2w91d\",\"footer\":\"OnePerson_footer__2eB2O\",\"oneButton\":\"OnePerson_oneButton__2kpD1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBox\":\"Login_loginBox__zU334\",\"form_row\":\"Login_form_row__1N85O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myAlbum\":\"MyAlbum_myAlbum__DeZ_o\",\"photos\":\"MyAlbum_photos__mZnZT\",\"headline\":\"MyAlbum_headline__2y2q3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__1StgS\",\"myContactsAndAboutMe\":\"ProfileInfo_myContactsAndAboutMe__2Vbsp\",\"avatar\":\"ProfileInfo_avatar__2Dxuc\",\"buttonForUser\":\"ProfileInfo_buttonForUser__3oGTt\",\"userInfo\":\"ProfileInfo_userInfo__26tmf\",\"button\":\"ProfileInfo_button__17UGQ\",\"myContacts\":\"ProfileInfo_myContacts__277pz\",\"aboutMe\":\"ProfileInfo_aboutMe__jGLXa\",\"spanMyContacts\":\"ProfileInfo_spanMyContacts__3Hfue\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3yyZh\",\"nikName\":\"Profile_nikName__3KeN8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3JJxs\",\"active\":\"DialogItem_active__1Mg9A\"};"],"sourceRoot":""}